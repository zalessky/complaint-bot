#!/usr/bin/env python3
"""
Обновление 1: Полный список категорий с эмодзи
"""
import json
from pathlib import Path

print("📦 Обновление 1: Категории с эмодзи")
print("="*60)

categories_data = {
  "categories": {
    "🚌 Транспорт и остановки": {
      "description": "Проблемы общественного транспорта и остановок",
      "fields": ["route_number", "vehicle_number", "description", "photo", "contact_phone"],
      "subcategories": [
        "😡 Поведение водителя (грубость, курение)",
        "🚦 Нарушение ПДД водителем",
        "🧹 Грязный салон",
        "🛠️ Неисправность транспортного средства",
        "⏰ Нарушение графика/игнорирование остановки",
        "🚫 Отказ в приеме карты/проездного/льготы",
        "♿ Трудности при посадке",
        "🏚️ Нет павильона",
        "🪣 Павильон грязный/сломанный",
        "🪧 Нет названия остановки",
        "🧭 Неверный маршрут/самовольный объезд",
        "🔍 Другое"
      ]
    },
    "🗑️ Мусор/контейнеры": {
      "description": "Проблемы с мусором и контейнерами",
      "fields": ["address", "location", "description", "photo"],
      "subcategories": [
        "♻️ Переполненные контейнеры",
        "🔥 Стихийная свалка",
        "🛻 Сброс мусора с транспорта",
        "🔨 Поврежденные контейнеры",
        "🤢 Грязная площадка/нужна уборка",
        "🌫️ Нужна помывка контейнеров",
        "🐀 Дератизация/дезинсекция",
        "🚮 Нет контейнера",
        "🗓️ Несвоевременный вывоз/пропуск графика",
        "🔍 Другое"
      ]
    },
    "🚧 Дороги и ямы": {
      "description": "Проблемы дорог, тротуаров и дорожной инфраструктуры",
      "fields": ["address", "location", "description", "photo"],
      "subcategories": [
        "🕳️ Ямы на дорогах/тротуарах",
        "🧱 Разрушенное покрытие",
        "❄️ Неубранный снег/наледь",
        "🚥 Светофор не работает",
        "🚫 Знак отсутствует/сломался",
        "📏 Нет разметки/стерлась",
        "💧 Глубокие лужи/нужна откачка",
        "🧱 Бордюры/поребрики разрушены",
        "🧑‍🦽 Пандусы/тактильная плитка отсутствуют",
        "🕯️ Уличное освещение не работает",
        "🕹️ Сломаны дорожные ограждения",
        "🐢 Пробки из-за организации движения",
        "🔍 Другое"
      ]
    },
    "🌳 Озеленение/вырубка": {
      "description": "Проблемы с деревьями, кустами и зелеными насаждениями",
      "fields": ["address", "location", "description", "photo"],
      "subcategories": [
        "🪓 Незаконная вырубка",
        "🌿 Заросли/сорняки — нужен покос",
        "🌲 Кусты/деревья закрывают обзор",
        "🥀 Посадки в плохом состоянии",
        "⚠️ Сухостой/риск падения",
        "💧 Нужен полив",
        "🐛 Вредители/болезни",
        "🌷 Требуются новые посадки",
        "♻️ Листва/ветки не вывезены",
        "🔍 Другое"
      ]
    },
    "🔧 ЖКХ": {
      "description": "Жилищно-коммунальное хозяйство",
      "fields": ["address", "location", "description", "photo"],
      "subcategories": [
        "💦 Прорыв трубы",
        "🕳️ Открытый люк",
        "💡 Не горит уличный фонарь",
        "🔌 Обрыв/искрение проводов",
        "🧯 Пожарная безопасность нарушена",
        "🚽 Протечка канализации",
        "🔍 Другое"
      ]
    },
    "🏞️ Благоустройство дворов/парков/скверов": {
      "description": "Состояние дворов, парков, скверов",
      "fields": ["address", "location", "description", "photo"],
      "subcategories": [
        "🪑 Сломаны лавочки/урны",
        "🛝 Детская площадка повреждена/опасна",
        "🚴 Дефекты велодорожек/скейт-зон",
        "🚻 Туалеты не работают/грязные",
        "🧼 Территория грязная/нужен субботник",
        "🧊 Гололед на прогулочных зонах",
        "🔍 Другое"
      ]
    },
    "🅿️ Парковки и эвакуация": {
      "description": "Проблемы с парковками",
      "fields": ["address", "location", "description", "vehicle_number", "photo"],
      "subcategories": [
        "🅿️ Нелегальная парковка/блокировка",
        "🚫 Парковка на газоне/тротуаре",
        "🚓 Нужен эвакуатор",
        "💳 Не работает оплата/паркомат",
        "🪧 Нет знаков/разметки парковки",
        "🚗 Брошенный/бесхозный транспорт",
        "🔍 Другое"
      ]
    },
    "🏗️ Стройка и шум": {
      "description": "Проблемы со строительством и шумом",
      "fields": ["address", "description", "photo"],
      "subcategories": [
        "🔊 Шум ночью/нарушение тишины",
        "🧱 Опасный стройобъект/ограждения",
        "🧹 Строительный мусор",
        "🚧 Перекрытие прохода без схемы",
        "🚙 Выезд со стройплощадки без мойки колес",
        "🔍 Другое"
      ]
    },
    "🐾 Животные": {
      "description": "Проблемы с животными",
      "fields": ["address", "location", "description", "photo"],
      "subcategories": [
        "🐕 Агрессивные/бездомные собаки",
        "💀 Мертвое животное",
        "🐱 Раненые/потерянные животные",
        "💩 Неубранные экскременты",
        "🐀 Крысы/мыши во дворе/подвале",
        "🔍 Другое"
      ]
    },
    "🏬 Торговля и сервис": {
      "description": "Проблемы торговли и сервиса",
      "fields": ["address", "description", "photo"],
      "subcategories": [
        "🧾 Обвес/обман/отказ выдать чек",
        "🍗 Несоблюдение санитарии",
        "🕰️ Торговля в неположенное время",
        "🚫 Незаконная торговля",
        "🔊 Уличная реклама/звуки мешают",
        "🔍 Другое"
      ]
    },
    "🌊 Водоемы и набережные": {
      "description": "Проблемы водоемов и набережных",
      "fields": ["address", "location", "description", "photo"],
      "subcategories": [
        "🏖️ Загрязнение берега/воды",
        "🛶 Опасные/сломанные пирсы/понтоны",
        "🚫 Купание запрещено — нет знаков",
        "🌿 Заросли камыша - требуется покос",
        "☠️ Сброс вредных веществ в водоем",
        "🔍 Другое"
      ]
    },
    "🏚️ Аварийные здания": {
      "description": "Опасные и аварийные здания",
      "fields": ["address", "description", "photo"],
      "subcategories": [
        "🧱 Трещины/обрушения",
        "🚷 Опасные подъезды/лестницы",
        "🪧 Нет предупреждающих табличек",
        "🔍 Другое"
      ]
    },
    "🧭 Навигация и тактильность": {
      "description": "Проблемы навигации и доступности",
      "fields": ["address", "description"],
      "subcategories": [
        "🔡 Нет адресных табличек/номеров домов",
        "🟨 Тактильная плитка повреждена/отсутствует",
        "🦽 Нет доступного входа/кнопки вызова",
        "🛗 Неисправен лифтовой подъемник в подземном переходе",
        "🔍 Другое"
      ]
    },
    "📢 Обратная связь": {
      "description": "Предложения и сообщения об ошибках",
      "fields": ["description"],
      "subcategories": [
        "💬 Предложение по улучшению",
        "🗣️ Сообщить об ошибке"
      ]
    },
    "✅ Благодарность": {
      "description": "Благодарности за хорошую работу",
      "fields": ["description"],
      "subcategories": [
        "✅ Благодарность"
      ]
    }
  },
  "field_definitions": {
    "route_number": {
      "label": "Номер маршрута",
      "prompt": "Укажите номер маршрута (например: 2, 15К, 42А):",
      "type": "text",
      "required": True
    },
    "vehicle_number": {
      "label": "Номер транспортного средства",
      "prompt": "Укажите номер транспортного средства или госномер (или нажмите Пропустить):",
      "type": "text",
      "required": False
    },
    "address": {
      "label": "Адрес",
      "prompt": "Введите адрес или отправьте геолокацию:",
      "type": "address_or_location",
      "required": True
    },
    "location": {
      "label": "Геолокация",
      "prompt": "Отправьте геолокацию или введите адрес:",
      "type": "location",
      "required": False
    },
    "description": {
      "label": "Описание",
      "prompt": "Опишите проблему подробно:",
      "type": "text",
      "required": True
    },
    "photo": {
      "label": "Фото",
      "prompt": "Отправьте фото проблемы или нажмите 'Пропустить':",
      "type": "photo",
      "required": False
    },
    "contact_phone": {
      "label": "Контактный телефон",
      "prompt": "Отправьте контактный телефон для связи (или нажмите 'Пропустить'):",
      "type": "phone",
      "required": False
    }
  }
}

# Создаем директорию
Path("config").mkdir(exist_ok=True)

# Сохраняем
with open("config/categories.json", "w", encoding="utf-8") as f:
    json.dump(categories_data, f, ensure_ascii=False, indent=2)

print("✅ Создан config/categories.json")
print(f"📊 Категорий: {len(categories_data['categories'])}")
print(f"📋 Полей: {len(categories_data['field_definitions'])}")
print()
print("Категории:")
for cat in categories_data['categories'].keys():
    print(f"  • {cat}")
print()
print("="*60)
print("✅ Обновление 1 завершено!")
