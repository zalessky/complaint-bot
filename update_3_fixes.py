#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 3: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –∞–¥–º–∏–Ω—Å–∫–∞—è –∫–Ω–æ–ø–∫–∞
"""
print("üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 3: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
print("="*60)

# 1. –û–±–Ω–æ–≤–ª—è–µ–º start handler —Å –∫–Ω–æ–ø–∫–æ–π –∞–¥–º–∏–Ω–∫–∏
start_handler = '''from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from backend.core.config import settings

router = Router()

def get_main_keyboard(user_id: int):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    is_admin = user_id in settings.admin_ids_list or user_id == settings.SUPER_ADMIN_ID
    
    if is_admin:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìù –ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É")],
                [KeyboardButton(
                    text="üìã –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è",
                    web_app=WebAppInfo(url="https://sterx.mooo.com:8443/webapp/residents")
                )],
                [KeyboardButton(text="‚úÖ –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å"), KeyboardButton(text="üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")],
                [KeyboardButton(text="üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")],
                [KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")]
            ],
            resize_keyboard=True
        )
    else:
        keyboard = ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìù –ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É")],
                [KeyboardButton(
                    text="üìã –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è",
                    web_app=WebAppInfo(url="https://sterx.mooo.com:8443/webapp/residents")
                )],
                [KeyboardButton(text="‚úÖ –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å"), KeyboardButton(text="üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")],
                [KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")]
            ],
            resize_keyboard=True
        )
    
    return keyboard

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    keyboard = get_main_keyboard(message.from_user.id)
    await message.answer(
        "üèôÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ì–æ—Ä–æ–¥—Å–∫–æ–π –ø–æ–º–æ—â–Ω–∏–∫!\\n\\n"
        "üìù –ü–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É - —Å–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ\\n"
        "üìã –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è - –æ—Ç–∫—Ä—ã—Ç—å –∏—Å—Ç–æ—Ä–∏—é\\n"
        "‚úÖ –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å - –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\\n"
        "üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å - –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –æ—à–∏–±–∫–∞\\n"
        "‚ÑπÔ∏è –ü–æ–º–æ—â—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        reply_markup=keyboard
    )

@router.message(Command("admin"))
async def cmd_admin(message: types.Message):
    await show_admin_panel(message)

@router.message(lambda message: message.text == "üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
async def btn_admin_panel(message: types.Message):
    await show_admin_panel(message)

async def show_admin_panel(message: types.Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    if message.from_user.id not in settings.admin_ids_list and message.from_user.id != settings.SUPER_ADMIN_ID:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        return
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text="üé´ –¢–∏–∫–µ—Ç-—Ç—Ä–µ–∫–µ—Ä (–ö–∞–Ω–±–∞–Ω)",
                web_app=WebAppInfo(url="https://sterx.mooo.com:8443/webapp/services")
            )],
            [InlineKeyboardButton(
                text="üìä API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è",
                url="https://sterx.mooo.com:8443/docs"
            )],
            [InlineKeyboardButton(
                text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                callback_data="admin_stats"
            )]
        ]
    )
    
    await message.answer(
        "üîß –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\\n\\n"
        "üé´ –¢–∏–∫–µ—Ç-—Ç—Ä–µ–∫–µ—Ä - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∞–º–∏\\n"
        "üìä API - —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è\\n"
        "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –æ–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏",
        reply_markup=keyboard
    )
'''

with open("bot/handlers/start.py", "w", encoding="utf-8") as f:
    f.write(start_handler)

print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω bot/handlers/start.py")
print("  ‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' –¥–ª—è –∞–¥–º–∏–Ω–æ–≤")
print("  ‚Ä¢ –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–∞–≤")

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î
print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î...")
import sqlite3
try:
    conn = sqlite3.connect('data/complaints.sqlite3')
    cursor = conn.cursor()
    cursor.execute("PRAGMA table_info(complaints)")
    columns = cursor.fetchall()
    print("  –ö–æ–ª–æ–Ω–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ complaints:")
    for col in columns:
        print(f"    ‚Ä¢ {col[1]} ({col[2]})")
    conn.close()
except Exception as e:
    print(f"  ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ë–î: {e}")

print("\n" + "="*60)
print("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 3 –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
print("  1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: bash stop_app.sh && bash start_app.sh")
print("  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–Ω–æ–ø–∫—É '–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'")
print("  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É '–ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è'")
